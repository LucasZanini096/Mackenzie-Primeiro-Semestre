import turtle

t = turtle.Turtle()
t.speed(0)
t.shape("square")

wh = int(input("Informe a largura/altura o pixel: "))
x = int(input("Informe a coordenada X inicial : "))
y = int(input("Informe a coordenada Y inicial : "))

Cores_1 = ["#ffffff","#000000","#F80500","#F7C192"]
Cores_2 = ["#ffffff"," #000000", "#F80500", "#F7C192", "#FDFD11", "#0071C1", "#9D4700" ]

def box(x,y,wh):

    t.penup()
    t.setpos(x,y)
    t.pendown()
    t.pensize(wh)
    t.forward(1)



def drawPixels(matriz_bits, x, y, cores, wh):

    t.shape("classic")
    start = x
    for i in range(len(matriz_bits)):
        for j in range(len(matriz_bits[i])):
            t.begin_fill()

            if (wh < 10):
                t.color(cores[matriz_bits [i] [j]])
            else:
                t.color("#cccccc", cores[matriz_bits [i][j]])
            box(x,y,wh)
            t.end_fill()
            x += wh
        y -= wh
        x = start
        
    t.shape("black")

pixels1 = [[0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0], [0,0,0,1,1,0,0,2,2,0,0,1,1,0,0,0], [0,0,1,0,0,0,2,2,2,2,0,0,0,1,0,0], [0,1,2,2,2,2,2,2,2,2,2,2,2,2,1,0], [0,1,2,2,2,2,2,2,2,2,2,2,2,2,1,0], [1,0,2,2,2,2,0,0,0,0,2,2,2,2,0,1], [1,0,0,2,2,0,0,0,0,0,0,2,2,0,0,1], [1,0,0,2,2,0,0,0,0,0,0,2,2,0,0,1], [1,0,2,2,2,2,0,0,0,0,2,2,2,2,0,1], [1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1], [1,2,2,2,1,1,1,1,1,1,1,1,2,2,2,1], [0,1,1,1,3,3,1,3,3,1,3,3,1,1,1,0], [0,0,1,3,3,3,1,3,3,1,3,3,3,1,0,0], [0,0,1,3,3,3,3,3,3,3,3,3,3,1,0,0], [0,0,0,1,3,3,3,3,3,3,3,3,1,0,0,0],
[0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0]]

pixels2 = [[0,0,0,2,2,2,2,2,2,0,0,0,0], [0,0,2,2,2,2,2,2,2,2,2,2,0], [0,0,6,6,6,3,3,3,1,3,0,0,0], [0,6,3,6,3,3,3,3,1,3,3,3,0], [0,6,3,6,6,3,3,3,3,1,3,3,3], [0,6,6,3,3,3,3,3,1,1,1,1,0], [0,0,0,3,3,3,3,3,3,3,3,0,0], [0,0,2,2,5,2,2,2,2,0,0,0,0], [0,2,2,2,5,2,2,5,2,2,2,0,0], [2,2,2,2,5,5,5,5,2,2,2,2,0], [3,3,2,5,4,5,5,4,5,2,3,3,0], [3,3,3,5,5,5,5,5,5,3,3,3,0], [3,3,5,5,5,5,5,5,5,5,3,3,0], [0,0,5,5,5,0,0,5,5,5,0,0,0], [0,6,6,6,0,0,0,0,6,6,6,0,0],
[6,6,6,6,0,0,0,0,6,6,6,6,0]]

box(x,y,wh)
drawPixels(pixels1,x,y,Cores_1,wh)

